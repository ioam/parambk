git:
  depth: 100

language: generic

os:
  - linux

sudo: false

env:
  global:
    - DOIT=doit
    - secure: qDzvmjcR6eLAmHx0ziN3Y5M8h65+OM+eBNERQsC3WSkeaD45rEE6a8w59dBdUzZBTLKO2RP8pKlgzxBZGOBlnLbTyN4RD/q2dA+gm5c0SDWWT4kVCiogJVsrzyRHVgMDmqDu56HPbQzhsW+5Qh2JKjVkkI7GwvGZRFB9WKQC8yjW/RfLvQ7bzX6jXbaHDYg9dywjI5u7da7HZKXyt/6nhebdaI19RdQHuESUqTADFEgdCKdzrNC+NqbJ8SUnNBBmkb1ZqoQ3/p1/Z/+uDi/2ThozE7Lz6gl8HtxVRnBiwNCDvZRE8uTB79+FlW0FJCVZ7qGO8jVWlVqy+WEEFh/6s9RP2PLd73CmItfF7BzSdxdurOYfnizboqCideSasDQK7XdeDiX4fPrgqbeesn8+XJ9vhxRAmpsNdZIU+2pivgviJwUZUwKwgzt3hf23ld9GpJg60wCfQRT8hiZc3/XsUPrzDjci7hwrRESqobPcuWk6xsFPTvJsTeOSLejP1wDOGAhufLTQIys26BSwHiaj6aI4RPK3Y4sy644m4IOfVvi3d+YfyN2Q5NO7QIwk5PjQBUEdwcIi3lAk2eAIjJamlDYFCRrnwuEoFinuFlUjtqpkuVTLgonTbk9KkIYnXeP3wYERrt4uOJtxDRCojBC0FI5rDbkhC3wP8Wef4EToQ+s=

stages:
  - test
  - doc
  - name: conda_dev_package
    if: (branch = master AND type != pull_request)
  - name: conda_package
    if: tag =~ ^v

jobs:
  include:
    - &default
      stage: test
      env:
        - PYTHON_VERSION="3.6"
      before_install:
        - easy_install --user "doit<0.30" pyct && ~/.local/bin/doit install_miniconda && rm -f .doit.db
        - export PATH="$HOME/miniconda/bin:$PATH"
        - conda install -y -c pyviz/label/dev -c conda-forge pyct
        - doit ci_configure_conda
        - doit create_env --name=test-environment --python=$PYTHON_VERSION
        - source activate test-environment
      install:
        - doit conda_develop_install --channel=conda-forge
        - doit capture_conda_env
      script:
        - doit all_tests

    - <<: *default
      env:
        - PYTHON_VERSION="2.7"
        - DOIT="doit<0.30"

    - <<: *default
      stage: doc
      install:
        - doit conda_develop_install --channel=conda-forge
        - doit install_doc_dependencies
        - doit capture_conda_env        
      script:
        - doit docs
      deploy:
        - provider: pages
          skip_cleanup: true
          github_token: $GITHUB_TOKEN
          local_dir: ./doc/_build/html
          on:
            # TODO: depending on what we do for auto versioning/packaging,
            # should make this deploy somewhere for PRs etc, and only to the
            # main site on specific tag format.
            tags: true
        - provider: pages
          skip_cleanup: true
          github_token: $GITHUB_TOKEN
          local_dir: ./doc/_build/html
          repo: ioam-docs/parambokeh-master

    - <<: *default
      stage: conda_dev_package
      install:
        - export VERSIONHACK=$(python -c "import subprocess;desc=subprocess.check_output(['git','describe','--long']).decode('utf8');v,commits=desc.split('-')[0:2];newv=[int(x) for x in v[1::].split('.')];newv[-1]+=1;print('.'.join(str(x) for x in newv)+'.dev'+commits)")      
        - doit build_conda_package --channel=conda-forge
      script:
        # TODO should only upload if package doesn't exist (as e.g. there are cron builds)
        - doit upload_conda_package --token=$CONDA_UPLOAD_TOKEN --label=dev

    - <<: *default
      stage: conda_package
      install:
        - export VERSIONHACK=$(python -c "import subprocess;desc=subprocess.check_output(['git','describe','--long']).decode('utf8');v,commits=desc.split('-')[0:2];newv=[int(x) for x in v[1::].split('.')];newv[-1]+=1;print('.'.join(str(x) for x in newv)+'.dev'+commits)")
        - doit build_conda_package --channel=conda-forge
      script:
        - doit upload_conda_package --token=$CONDA_UPLOAD_TOKEN --label=main --label=dev
